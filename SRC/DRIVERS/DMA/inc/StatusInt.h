#ifndef _STATUSINT_H_
#define _STATUSINT_H_

#include "RegCommonDef.h"
#define REGISTER_ALL_ITEMS\
/* 0 TFR */             REGISTER_ADD_ITEM(STATUSINT,TFR, 0, 0)\
/* 1 BLOCK */           REGISTER_ADD_ITEM(STATUSINT,BLOCK, 1, 1)\
/* 2 SRCT */            REGISTER_ADD_ITEM(STATUSINT,SRCT, 2, 2)\
/* 3 DSTT */            REGISTER_ADD_ITEM(STATUSINT,DSTT, 3, 3)\
/* 4 ERR */             REGISTER_ADD_ITEM(STATUSINT,ERR, 4, 4)\
/* 63:5 Undefined */

#define REGISTER_ADD_ITEM REGISTER_ADD_REG_ENUM
DEF_REG_ENUM_TYPE(STATUSINT)
#undef REGISTER_ADD_ITEM

#define REGISTER_ADD_ITEM REGISTER_ADD_REG_FIELD
DEF_REG_FIELD_TYPE(STATUSINT)
#undef REGISTER_ADD_ITEM


#define REGISTER_ADD_ITEM REGISTER_FORMAT_REG_BY_STRUCT
DEF_FORMAT_REG_BY_STRUCT_FUNC(STATUSINT)
#undef REGISTER_ADD_ITEM

#define REGISTER_ADD_ITEM REGISTER_FORMAT_STRUCT_BY_REG
DEF_FORMAT_STRUCT_BY_REG_FUNC(STATUSINT)
#undef REGISTER_ADD_ITEM

#undef REGISTER_ALL_ITEMS

typedef enum _STATUSINT_REG_ALLMASK_ENUM{
    STATUSINT_ALL_MASK = (STATUSINT_TFR_MASK << STATUSINT_TFR_OFFSET)
                         | (STATUSINT_BLOCK_MASK << STATUSINT_BLOCK_OFFSET)
                         | (STATUSINT_SRCT_MASK << STATUSINT_SRCT_OFFSET)
                         | (STATUSINT_DSTT_MASK << STATUSINT_DSTT_OFFSET)
                         | (STATUSINT_ERR_MASK << STATUSINT_ERR_OFFSET),
}STATUSINT_REG_ALLMASK_ENUM;


//Bit for Interrupt Clear Registers
#define INT_CLEAR           ((ULONG)(0x1));

//Bit for Interrupt Mask Registers
#define INT_MASK            ((ULONG)(0x0))
#define INT_UNMASK          ((ULONG)(0x1))
#define INT_MASK_WE         ((ULONG)(0x100))

#endif 